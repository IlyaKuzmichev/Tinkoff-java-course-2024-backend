app:
  scheduler:
    enable: true
    invoke-interval: 5s
    force-check-delay: 10s
    check-interval: 300s
  database-access-type: jpa

client:
  github:
    base-url: https://api.github.com
  stackoverflow:
    base-url: https://api.stackexchange.com/2.3
  bot:
    base-url: http://localhost:8090

spring:
  liquibase:
    enabled: false
  application:
    name: scrapper
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/scrapper
    username: postgres
    password: postgres
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  cache:
    jcache:
      provider: com.github.benmanes.caffeine.jcache.spi.CaffeineCachingProvider
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=60s
    cache-names:
      - rate-limit-buckets-bot

bucket4j:
  enabled: true
  filters:
    - cache-name: rate-limit-buckets-bot
      url: /.*
      http-response-body: "{ \"status\": 429, \"error\": \"Too Many Requests\", \"message\": \"You have exhausted your API Request Quota\" }"
      rate-limits:
        - bandwidths:
            - capacity: 100
              time: 1
              unit: minutes
              refill-speed: interval

springdoc:
  swagger-ui:
    path: /swagger-ui

server:
  port: 8080

logging:
  config: classpath:log4j2-plain.xml

retry:
  attempts: 3
  status-codes: 500, 502, 503, 504
  type: linear
  backoff-config:
    constant:
      initial-interval: 1s
    linear:
      initial-interval: 1s
      maximum-interval: 10s
    exponential:
      initial-interval: 1s
      maximum-interval: 10s
      multiplier: 2
