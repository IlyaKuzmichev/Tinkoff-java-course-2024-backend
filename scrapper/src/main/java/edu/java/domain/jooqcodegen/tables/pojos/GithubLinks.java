/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.jooqcodegen.tables.pojos;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class GithubLinks implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long linkId;
    private OffsetDateTime lastUpdate;
    private OffsetDateTime lastPush;
    private Integer pullRequestsCount;

    public GithubLinks() {
    }

    public GithubLinks(GithubLinks value) {
        this.linkId = value.linkId;
        this.lastUpdate = value.lastUpdate;
        this.lastPush = value.lastPush;
        this.pullRequestsCount = value.pullRequestsCount;
    }

    @ConstructorProperties({"linkId", "lastUpdate", "lastPush", "pullRequestsCount"})
    public GithubLinks(
        @NotNull Long linkId,
        @Nullable OffsetDateTime lastUpdate,
        @Nullable OffsetDateTime lastPush,
        @Nullable Integer pullRequestsCount
    ) {
        this.linkId = linkId;
        this.lastUpdate = lastUpdate;
        this.lastPush = lastPush;
        this.pullRequestsCount = pullRequestsCount;
    }

    /**
     * Getter for <code>GITHUB_LINKS.LINK_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getLinkId() {
        return this.linkId;
    }

    /**
     * Setter for <code>GITHUB_LINKS.LINK_ID</code>.
     */
    public void setLinkId(@NotNull Long linkId) {
        this.linkId = linkId;
    }

    /**
     * Getter for <code>GITHUB_LINKS.LAST_UPDATE</code>.
     */
    @Nullable
    public OffsetDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>GITHUB_LINKS.LAST_UPDATE</code>.
     */
    public void setLastUpdate(@Nullable OffsetDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>GITHUB_LINKS.LAST_PUSH</code>.
     */
    @Nullable
    public OffsetDateTime getLastPush() {
        return this.lastPush;
    }

    /**
     * Setter for <code>GITHUB_LINKS.LAST_PUSH</code>.
     */
    public void setLastPush(@Nullable OffsetDateTime lastPush) {
        this.lastPush = lastPush;
    }

    /**
     * Getter for <code>GITHUB_LINKS.PULL_REQUESTS_COUNT</code>.
     */
    @Nullable
    public Integer getPullRequestsCount() {
        return this.pullRequestsCount;
    }

    /**
     * Setter for <code>GITHUB_LINKS.PULL_REQUESTS_COUNT</code>.
     */
    public void setPullRequestsCount(@Nullable Integer pullRequestsCount) {
        this.pullRequestsCount = pullRequestsCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final GithubLinks other = (GithubLinks) obj;
        if (this.linkId == null) {
            if (other.linkId != null) {
                return false;
            }
        } else if (!this.linkId.equals(other.linkId)) {
            return false;
        }
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null) {
                return false;
            }
        } else if (!this.lastUpdate.equals(other.lastUpdate)) {
            return false;
        }
        if (this.lastPush == null) {
            if (other.lastPush != null) {
                return false;
            }
        } else if (!this.lastPush.equals(other.lastPush)) {
            return false;
        }
        if (this.pullRequestsCount == null) {
            if (other.pullRequestsCount != null) {
                return false;
            }
        } else if (!this.pullRequestsCount.equals(other.pullRequestsCount)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.linkId == null) ? 0 : this.linkId.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        result = prime * result + ((this.lastPush == null) ? 0 : this.lastPush.hashCode());
        result = prime * result + ((this.pullRequestsCount == null) ? 0 : this.pullRequestsCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("GithubLinks (");

        sb.append(linkId);
        sb.append(", ").append(lastUpdate);
        sb.append(", ").append(lastPush);
        sb.append(", ").append(pullRequestsCount);

        sb.append(")");
        return sb.toString();
    }
}
