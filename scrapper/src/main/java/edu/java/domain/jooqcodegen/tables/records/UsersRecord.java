/*
 * This file is generated by jOOQ.
 */

package edu.java.domain.jooqcodegen.tables.records;

import edu.java.domain.jooqcodegen.enums.UserStatusEnum;
import edu.java.domain.jooqcodegen.tables.Users;
import java.beans.ConstructorProperties;
import javax.annotation.processing.Generated;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.18.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class UsersRecord extends TableRecordImpl<UsersRecord> implements Record2<Long, UserStatusEnum> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>USERS.ID</code>.
     */
    public void setId(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>USERS.ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>USERS.USER_STATUS</code>.
     */
    public void setUserStatus(@Nullable UserStatusEnum value) {
        set(1, value);
    }

    /**
     * Getter for <code>USERS.USER_STATUS</code>.
     */
    @Nullable
    public UserStatusEnum getUserStatus() {
        return (UserStatusEnum) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row2<Long, UserStatusEnum> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row2<Long, UserStatusEnum> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Users.USERS.ID;
    }

    @Override
    @NotNull
    public Field<UserStatusEnum> field2() {
        return Users.USERS.USER_STATUS;
    }

    @Override
    @NotNull
    public Long component1() {
        return getId();
    }

    @Override
    @Nullable
    public UserStatusEnum component2() {
        return getUserStatus();
    }

    @Override
    @NotNull
    public Long value1() {
        return getId();
    }

    @Override
    @Nullable
    public UserStatusEnum value2() {
        return getUserStatus();
    }

    @Override
    @NotNull
    public UsersRecord value1(@NotNull Long value) {
        setId(value);
        return this;
    }

    @Override
    @NotNull
    public UsersRecord value2(@Nullable UserStatusEnum value) {
        setUserStatus(value);
        return this;
    }

    @Override
    @NotNull
    public UsersRecord values(@NotNull Long value1, @Nullable UserStatusEnum value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    @ConstructorProperties({"id", "userStatus"})
    public UsersRecord(@NotNull Long id, @Nullable UserStatusEnum userStatus) {
        super(Users.USERS);

        setId(id);
        setUserStatus(userStatus);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(edu.java.domain.jooqcodegen.tables.pojos.Users value) {
        super(Users.USERS);

        if (value != null) {
            setId(value.getId());
            setUserStatus(value.getUserStatus());
            resetChangedOnNotNull();
        }
    }
}
